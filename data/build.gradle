apply plugin: 'com.android.library'

android {
    publishNonDefault true
    def globalConfiguration = rootProject.extensions.getByName("ext")
    compileSdkVersion globalConfiguration.getAt("compileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("buildToolsVersion")
    defaultConfig {
        minSdkVersion globalConfiguration.getAt("minSdkVersion")
        targetSdkVersion globalConfiguration.getAt("targetSdkVersion")
        versionCode globalConfiguration.getAt("versionCode")
        versionName globalConfiguration.getAt("versionName")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    def developmentDependencies = rootProject.ext.developmentDependencies
    api developmentDependencies.support
    annotationProcessor developmentDependencies.daggerCompiler
    api developmentDependencies.dagger
    compileOnly developmentDependencies.javaxAnnotation
    api developmentDependencies.rxJava
    api developmentDependencies.rxAndroid
    api developmentDependencies.retrofit2
    api developmentDependencies.retrofitGson
    api developmentDependencies.retrofitAdapter
    api developmentDependencies.androidAnnotations
    api developmentDependencies.reservoir
    api developmentDependencies.okHttp
    api developmentDependencies.loggingInterceptor
    api developmentDependencies.websocket
    api developmentDependencies.msgpack
    api project(':utils')
    api project(':domain')
}
